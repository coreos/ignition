#!/usr/bin/env bash

set -eu

source ./build

SRC=$(find . -name '*.go' \
  -not -path "./vendor/*")

PKG=$(cd gopath/src/${REPO_PATH}; go list ./... | \
	grep --invert-match vendor | grep --invert-match tests)

# https://github.com/golang/go/issues/15067
PKG_VET=$(cd gopath/src/${REPO_PATH}; go list ./... | \
	grep --invert-match vendor | \
	grep --invert-match internal/log)

echo "Checking gofix..."
go tool fix -diff $SRC

echo "Checking gofmt..."
res=$(gofmt -d -e -s $SRC)
echo "${res}"
if [ -n "${res}" ]; then
	exit 1
fi

echo "Checking govet..."
go vet $PKG_VET

if [ "${ACTION:-TEST}" != "COMPILE" ]; then
    echo "Running tests..."
    go test -ldflags "-extldflags -fno-PIC" -timeout 60s -cover $@ ${PKG} --race
else
    PKG=$(cd gopath/src/${REPO_PATH}; go list ./... | \
    	grep --invert-match vendor | grep tests)
    echo "Compiling tests..."
    for p in ${PKG}; do
		go test -c $p
	done
fi

echo "Success"
